# Database configuration
# This block configures the database connection details:
# - spring.datasource.url: Specifies the JDBC URL for the SQLite database file 'telemetry.db'.
# - spring.datasource.driver-class-name: Sets the JDBC driver class for SQLite.
# - spring.datasource.username: Sets the username for the database connection.
# - spring.datasource.password: Sets the password for the database connection.
# - spring.jpa.database-platform: Configures Hibernate to use the SQLite dialect for database operations.
spring.datasource.url=jdbc:sqlite:telemetry.db
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.datasource.username=
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect

# JPA configuration
# This block configures JPA and Hibernate behavior:
# - spring.jpa.hibernate.ddl-auto=update: Enables automatic schema generation/updates by Hibernate.
# - spring.jpa.properties.hibernate.dialect: Configures Hibernate to use the SQLite dialect for database operations.
# - spring.jpa.open-in-view=false: Disables opening the database connection in view scope.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect
spring.jpa.open-in-view=false

# Logging configuration
# This block configures logging levels for Hibernate and Spring Web:
# - logging.level.org.hibernate.SQL=DEBUG: Sets the logging level for Hibernate SQL statements to DEBUG.
# - logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE: Sets the logging level for Hibernate parameter binding to TRACE.
# - logging.level.org.springframework.web=INFO: Sets the logging level for Spring Web to INFO.
# - logging.level.cl.baezdaniel.telexample=INFO: Sets the logging level for the TeleExample application to INFO.
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=INFO
logging.level.cl.baezdaniel.telexample=INFO

# Telemetry Event Processing Configuration
# Configure the async thread pool for telemetry event processing
# Adjust these values based on your hardware and load requirements

# Core number of threads to keep in the pool
telemetry.processing.core-pool-size=4

# Maximum number of threads in the pool  
telemetry.processing.max-pool-size=8

# Queue capacity for pending tasks
telemetry.processing.queue-capacity=100

# API configuration
server.port=8080

# Thread pool configuration for async processing
telemetry.async.core-pool-size=4
telemetry.async.max-pool-size=8
telemetry.async.queue-capacity=100
telemetry.async.thread-name-prefix=TelemetryProcessor-

# API rate limiting
server.tomcat.threads.max=200
server.tomcat.accept-count=100

# API timeouts
server.tomcat.connection-timeout=20000

# Alert system configuration
alert.retention.months=3
alert.cleanup.schedule=0 0 2 * * ?

# Pagination defaults
alert.api.default-page-size=20
alert.api.max-page-size=100 