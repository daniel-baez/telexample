# Test Database configuration
# H2 Database configuration for tests (in-memory)
# Using simple H2 in-memory database configuration for maximum compatibility
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# JPA/Hibernate properties for tests
# This block configures JPA/Hibernate behavior for tests.
# 'ddl-auto=create-drop' means Hibernate will create schema on startup and drop on shutdown
# 'sql.init.mode=never' since we're using create-drop, no need for manual schema initialization
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.mode=never

# Disable Spring Boot banner in tests
spring.main.banner-mode=off

# =================================
# SECURITY CONFIGURATION FOR TESTS
# =================================

# Disable authentication for all tests by default (backward compatibility)
endpoint.auth.enabled=false

# Test API keys (used when authentication is explicitly enabled in specific tests)
endpoint.security.api-keys=valid-test-key,test-key-123,auth-test-key

# Suppress verbose test output - only show WARN and ERROR messages
logging.level.com.zaxxer.hikari=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN 
logging.level.org.hibernate=WARN
logging.level.org.springframework.boot=WARN
logging.level.org.springframework.data=WARN
logging.level.org.springframework.test=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework=WARN
logging.level.root=WARN

# Keep our application logs at INFO level (optional)
logging.level.cl.baezdaniel.telexample=INFO

# Disable JPA open-in-view warning in tests
spring.jpa.open-in-view=false

# Test-specific async configuration for performance tests
# Increase thread pool capacity to handle performance test load
telemetry.processing.core-pool-size=16
telemetry.processing.max-pool-size=32
telemetry.processing.queue-capacity=500

# Allow longer timeouts for performance tests
spring.task.execution.pool.keep-alive=60s

# =================================
# METRICS CONFIGURATION FOR TESTS - DISABLED BY DEFAULT
# =================================

# PERFORMANCE FIRST: Metrics disabled for maximum test speed
# Enable only for specific metrics-testing classes with @TestPropertySource
management.metrics.enable.all=false

# Minimal endpoints for tests
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never

# To enable metrics for specific tests, add this annotation:
# @TestPropertySource(properties = {
#     "management.metrics.enable.all=true",
#     "management.endpoints.web.exposure.include=health,metrics,prometheus"
# })

# Reduced rate limits for testing (when metrics enabled in specific tests)
rate-limit.enabled=false
rate-limit.telemetry.device.requests-per-minute=10
rate-limit.ip.requests-per-minute=20
rate-limit.global.requests-per-second=100

# Tag configuration for test metrics (when enabled)
management.metrics.tags.application=telemetry-system
management.metrics.tags.environment=test
